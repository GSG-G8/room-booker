name: Postgres Service Example

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  jest-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm t
        env:
          # use localhost for the host here because we are running the job on the VM.
          # If we were running the job on in a container this would be postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
      # - run: node client.js
      #   working-directory: ./postgres
      #   env:
      #     # use localhost for the host here because we are running the job on the VM.
      #     # If we were running the job on in a container this would be postgres
      #     POSTGRES_HOST: localhost
      #     POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
